{
module DenizenScriptLexer

open System
open Microsoft.FSharp.Text.Lexing
open DenizenScriptParser

// example: http://en.wikibooks.org/wiki/F_Sharp_Programming/Lexing_and_Parsing

let lexeme = Lexing.LexBuffer<_>.LexemeString
}

let alpha = ['a'-'z' 'A'-'Z']
let digit = ['0'-'9']
let specialchar = ['?' '-' '_' '(' ')' '&'] 
let whitespace = [' ' '\t' ]
let newline = ('\n' | '\r' '\n')
let string = [^' ' '\t' '\r' '\n' '>' '<' ] (alpha | digit | specialchar)*

let keyword = "time" | "chat" | "zap" | "flag"

rule tokenize = parse
 | whitespace									{ tokenize lexbuf }
 | newline										{ tokenize lexbuf }
 | "\""											{ DQUOTE }
 | "'"											{ SQUOTE }
 | string ":"									{ IDENTIFIER(lexeme lexbuf)}
 | "- " keyword									{ KEYWORD(lexeme lexbuf) }
 | "- ^" keyword									{ INSTANTKEYWORD(lexeme lexbuf) }
 | "<"											{ LTAG }
 | ">"											{ RTAG }
 | "["											{ LBRACKET }
 | "]"											{ RBRACKET }
 | "#" [^ '\n']* '\n'							{ tokenize lexbuf }
 | ['-']?digit+									{ INT (Int32.Parse(lexeme lexbuf)) }
 | ['-']?digit+('.'digit+)?(['e''E']digit+)?		{ FLOAT (Double.Parse(lexeme lexbuf)) }
 | string										{ STRING(lexeme lexbuf) }
 | eof											{ EOF }
